ActivityDescription.Description=Il modellatore dovrebbe fornire una breve descrizione per ogni attività nel modello (se lo strumento di modellazione lo consente).
ActivityDescription.Name=Descrizione Attività
ActivityDescription.SuggestionKO=\nAggiungi una Descrizione per le seguenti Attività:
ActivityDescription.SuggestionOK=Ben Fatto\!
ActivityDescription.SuggestionSubprocessKO=\nAggiungi una Descrizione per le Attività del SubProcess 
ApplyHierarchicalStructure.Description=Il modellatore dovrebbe creare una struttura gerarchica del Business Process con l'uso di sotto-processi sono usati per dividere il processo in fasi o strati. Il modellatore può espandersi i sotto-processi in seguito per esporre dettagli di bassi livelli di gerarchia.
ApplyHierarchicalStructure.Name=Applicare struttura gerarchica con sottoprocessi
ApplyHierarchicalStructure.SuggestionKO=Applica una struttura gerarchica con sottoprocessi alle seguenti attività: 
ApplyHierarchicalStructure.SuggestionOK=Ben Fatto\!
BalanceGateways.Description=TIl modellatore dovrebbe utilizzare sempre lo stesso tipo di gateway sia per la suddivisione e  che per la giunzione del flusso. Ad esempio, quando un flusso è diviso con un gateway parallelo, i flussi paralleli risultanti dovrebbero essere raccolti da un'altro gateway parallelo.
BalanceGateways.Name=Balancia i Gateways
BalanceGateways.SuggestionKO=Balancia i Gateways:
BalanceGateways.SuggestionOK=Ben Fatto\!
BalanceGateways.SuggestionSubprocessKO=\nBalancia i Gateways del SubProcess 
ConsistentUsageEndEvents.Description=Il modellatore dovrebbe distinguere gli stati finali di successo e di fallimento in un processo o in un sotto-processo con eventi laterali separati. Flussi che finiscono nel medesimo stato finale dovrebbero essere unificati in uno stesso evento finale. Pertanto, gli eventi laterali separati che non rappresentano stati finali distinti devono essere uniti in un unico evento finale. 
ConsistentUsageEndEvents.Name=Uso Consistente degli End Events
ConsistentUsageEndEvents.SuggestionKO=\nUsa solo un End Event:
ConsistentUsageEndEvents.SuggestionOK=Ben Fatto\!
ConsistentUsageEndEvents.SuggestionSubprocessKO=\nUsa solo un End Event nel SubProcess 
ConsistentUsageLanes.Description=Il modellatore deve modellare unità organizzative interne come Lane all'interno di un unico Pool di processi, non come Pool separate; Pool separate implicano processi indipendenti. Creare una Lane, in una Pool, solo se almeno una attività o evento intermedio viene eseguita in essa.
ConsistentUsageLanes.Name=Uso Consistente delle Lanes
ConsistentUsageLanes.SuggestionKO=\nAggiungi Attività nelle Lanes:
ConsistentUsageLanes.SuggestionOK=Ben Fatto\!
ConsistentUsagePools.Description=Il modellatore dovrebbe definire una Pool come processi e/o partecipanti principale, ed utilizzare Pools black-box per rappresentare partecipanti e/o processi esterni. Le Pools modellate devono essere messe relazione tra loro attraverso scambio di messaggi.
ConsistentUsagePools.Name=Uso Consistente delle Pools
ConsistentUsagePools.SuggestionKO=\nApri solo una Pools: 
ConsistentUsagePools.SuggestionOK=Ben Fatto\!
ConsistentUsageStartEvents.Description=Il modellatore deve includere, nel modello, un solo Start Event. Se necessario, le istanze alternative del processo dovrebbero essere rappresentate utilizzando un gateway basato su eventi.
ConsistentUsageStartEvents.Name=Uso Consistente degli Start Events
ConsistentUsageStartEvents.SuggestionKO=\nUsa solo uno Start or End Event:
ConsistentUsageStartEvents.SuggestionOK=Ben Fatto\!
ConsistentUsageStartEvents.SuggestionSubProcessKO=\nUsa solo uno Start or End Event nel SubProcess 
explicitGateways.Description=Il modellatore non dovrebbe dividere o unire i flussi utilizzando attività o eventi; il modellatore deve dividere o unire flussi  utilizzando sempre gateway. Egli deve sempre fare uso esplicito dei gateway. Ciò include che un'attività può avere un solo flusso in entrata e un solo flusso in uscita .
explicitGateways.Name=Uso esplicito dei Gateways
explicitGateways.SuggestionKO=Add Gateway before or/and after of the elements: 
explicitGateways.SuggestionOK=Ben Fatto\!
ExplicitStartEndEvents.Description=Il modellatore dovrebbe utilizzare esplicitamente eventi di Start e End. Processi con eventi di Start e End impliciti sono indesiderabili e perché potrebbero portare a interpretazioni errate.
ExplicitStartEndEvents.Name=Uso esplicito di Start e End Events
ExplicitStartEndEvents.SuggestionKO=Aggiungi Start e/o End Event 
ExplicitStartEndEvents.SuggestionOK=Ben Fatto\!
ExplicitStartEndEvents.SuggestionSubprocessKO=\nAggiungi Start e/o End Event nel SubProcess 
GuidelinesFactory.KO=KO
GuidelinesFactory.KODescription=Segui le seguenti linee guida:
GuidelinesFactory.OK=OK
GuidelinesFactory.OKDescription=Ben fatto, nessun errore trovato\!
Generic.LabelEmpty=Senza Etichetta
LabelingActivities.Description=Etichetta le Attività con un verbo e un oggetto. Il verbo utilizzato deve utilizzare il tempo presente. L' oggetto deve essere qualificato per il business del modello.  Le Attività non devono essere etichettate con lo stesso nome, ad eccezione delle Call Activities.
LabelingActivities.Name=Etichetta Activities
LabelingActivities.SuggestionKO=Inserisci Etichetta in Activities:
LabelingActivities.SuggestionOK=Ben Fatto\!
LabelingActivities.SuggestionSubprocessKO=Inserisci label in Activities in SubProcess 
LabelingANDGateways.Description=Omit labels on AND-splits and joins (and sequence flows connecting them); they add no new information, so it is best to omit them.
LabelingANDGateways.Name=Etichetta AND Gateway
LabelingANDGateways.SuggestionKO=\nNon etichettare gli AND Gateways: 
LabelingANDGateways.SuggestionOK=Ben Fatto\!
LabelingANDGateways.SuggestionSubprocessKO=\nNon etichettare AND Gateways in SubProcess: 
LabelingConvergingGateways.Description=Converging gateways do not required to be labeled. When the convergence logic is not obvious, a text annotation should be associated to the gateway.
LabelingConvergingGateways.Name=Etichetta Converging Gateways
LabelingConvergingGateways.SuggestionKO=\nNon etichettare Converging Gateways: 
LabelingConvergingGateways.SuggestionOK=Ben Fatto\!
LabelingConvergingGateways.SuggestionSubprocessKO=\nNon ertichetare Converging Gateways in SubProcess: 
LabelingDataObject.Description=All data objects should be labeled using a qualified noun that is the name of a business object. Multiple instances of the same data object are labeled (which are really data object references) using a matching label followed by the applicable state in square brackets.
LabelingDataObject.Name=Etichetta Data Object
LabelingDataObject.SuggestionKO=Inserisci etichetta in Data Objects: 
LabelingDataObject.SuggestionOK=Ben Fatto\!
LabelingDataObject.SuggestionSubprocessKO=Inserisci etichetta in Data Objects in SubProcess: 
LabelingEvents.Description=All events should have a label representing the state of the process: Events of type message, signal, escalation, and error events should be labeled with a past participle using an active verb; Link events should be labeled with a noun; Timer events should be labeled with time-date or schedule; Conditional events should be labeled with the condition that triggers them.
LabelingEvents.Name=Etichetta Events
LabelingEvents.SuggestionKO=\nUsa etichetta in Events:
LabelingEvents.SuggestionOK=Ben Fatto\!
LabelingEvents.SuggestionSubProcessKO=\nUsa etichetta negli Events del SubProcess 
LabelingLanes.Description=Lanes must always have a label. The label should identify the responsi- ble entity for the process. Lanes are often used for representing things as internal roles (e.g., manager, associate), systems (e.g., an enterprise application), or internal departments (e.g., shipping, finance).
LabelingLanes.Name=Etichetta in Lanes
LabelingLanes.SuggestionKO=\nInserisci etichetta nelle Lanes:
LabelingLanes.SuggestionOK=Ben Fatto\!
LabelingMessageEvent.Decription=Whenever the modeler uses a message event he should draw the message flow, and label the event. When a focus on the message itself is required, the modeler can represent a message icon and label it with the name of the message.
LabelingMessageEvent.Name=Etichetta in Message Event
LabelingMessageEvent.SuggestionKO=Inserisci etichetta in Message Events:
LabelingMessageEvent.SuggestionOK=Ben Fatto\!
LabelingMessageEvent.SuggestionSubprocessKO=Inserisci etichette in Message Events del SubProcess: 
LabelingPools.Description=The modeler should label pools using the participantâ\u20AC\u2122s name. The main pool can be labeled using the process name. If a pool is present in a subprocess, the name of the pool must be the same of the upper-level process pool which includes the subprocess activity. This means that the pool of the upper-level process and the pool of the subprocess needs to be the same.
LabelingPools.Name=Etichetta in Pools
LabelingPools.SuggestionKO=Inserisci etichetta in Pools:
LabelingPools.SuggestionOK=Ben Fatto\!
LabelingStartandEndEvents.Description=The modeler should not label start none and end none event if there is only one instance of them. The modeler shoud use Label in when multiple start and end events are used. Label them according to what they represent using a noun. Do not repeat names.
LabelingStartandEndEvents.Name=Etichetta in Start and End Events
LabelingStartandEndEvents.SuggestionKO=Inserisci label in Start/End Events: 
LabelingStartandEndEvents.SuggestionOK=Ben Fatto\!
LabelingStartandEndEvents.SuggestionSubprocessKO=Inserisci label in Start/End Events in SubProcess: 
LabelingXORGateway.Description=Label XOR split gateways with an interrogative phrase (do not label XOR join-gateways). Sequence flows coming out of diverging gateways of type exclusive, inclusive and complex should be labeled using their associated conditions stated as outcomes.
LabelingXORGateway.Name=Etichetta in XOR Gateway
LabelingXORGateway.SuggestionKO=Inserisci label in XOR Gateways: 
LabelingXORGateway.SuggestionOK=Ben Fatto\!
LabelingXORGateway.SuggestionSubprocessKO=Inserisci label in XOR Gateways in SubProcess: 
LinearMessageFlows.Description=Linear message flows without useless foldings help to maintain the model clear.
LinearMessageFlows.Name=Message Flows lineari
LinearMessageFlows.SuggestionKO=Rendi lineari le seguenti Message Flows: 
LinearMessageFlows.SuggestionOK=Ben Fatto\!
LinearSequenceFlows.Description=Linear sequence flows without useless foldings help to maintain the model clear.
LinearSequenceFlows.Name=Sequence Flows lineari
LinearSequenceFlows.SeggetionOK=Ben Fatto\!
LinearSequenceFlows.SuggestionKO=Rendi lineari le seguenti Sequence flows : 
LoopMarkerAnnotation.Description=The loop marker provides a more compact representation than the gateway-loopback, but it hides the loop condition. For that reason, it is best to indicate the condition in a text annotation.
LoopMarkerAnnotation.Name=Etichetta in Marker Annotation
LoopMarkerAnnotation.SuggestionKO=Inserisci label in Marker Annotations:
LoopMarkerAnnotation.SuggestionOK=Ben Fatto\!
LoopMarkerAnnotation.SuggestionSubprocessKO=Inserisci label in Marker Annotations in SubProcess 
MinimizeGatewayHeterogeneity.Description=The modeler should minimize the heterogeneity of gateway types. The use of several type of gateway may cause confusion against the simplicity of using few main type of gateways.
MinimizeGatewayHeterogeneity.Name=Minimizza Eterogeneità dei Gateway Heterogeneity
MinimizeGatewayHeterogeneity.SuggestionKO=Minimizza Eterogeneità dei Gateway Heterogeneity
MinimizeGatewayHeterogeneity.SuggestionOK=Ben Fatto\!
MinimizeGatewayHeterogeneity.SuggestionSubprocessKO=\nMinimizza Eterogeneità dei Gateway Heterogeneity del SubProcess 
MinimizeModelSize.Description=The modeler should try to keep models as small as possible. Large process models are difficult to read and comprehend. Additionally, they tend to contain more errors. Defining the correct scope of tasks and level of detail of processes is key to reduce the overage of information.
MinimizeModelSize.Name=Minimiza la dimensione del Modello
MinimizeModelSize.SuggestionKO=Too much elements %s. Please use max 31  the number of nodes: number of activities and routing elements in a process model
MinimizeModelSize.SuggestionOK=Ben Fatto\!
ModelLoops.Description=Where possible, and if this practice contributes to simplify the model, the modeler should model a loop via activity looping (with the loop marker) instead of using a sequence flow looping.
ModelLoops.Name=Modella loops via activity looping
ModelLoops.SuggestionKO=Modella loops via activity looping: 
ModelLoops.SuggestionOK=Ben Fatto\!
ProcessOrientation.Description=The modeler should draw pools horizontally and use consistent layout with horizontal sequence flows, and vertical message flows and associa- tions.
ProcessOrientation.Name=Orientamento Processo
ProcessOrientation.SuggestionKO=Cambia l'orientamento del Processo: 
ProcessOrientation.SuggestionOK=Ben Fatto\!
RestrictUsageTerminateEndEvent.Description=The process modeler should use terminate events only when strictly necessary; they are used to model situations where several alternative paths are enabled and the entire process have to be finished when one of them is completed. The modeler should use other end events rather than the terminate end event (e.g. a generic end event), to guarantee that the executions of the reaming process paths or activities will not be stopped.
RestrictUsageTerminateEndEvent.Name=Restringi l'uso dei terminate end event
RestrictUsageTerminateEndEvent.SuggestionKO=\nNon usare Terminate End Event:
RestrictUsageTerminateEndEvent.SuggestionOK=Ben Fatto\!
RestrictUsageTerminateEndEvent.SuggestionSubprocessKO=\nNon usare Terminate Event in SubProcess 
SplitAndJoinFlows.Description=The modeler should not use gateways to join and split at the same time.
SplitAndJoinFlows.Name=Uso di Split and Join Flows
SplitAndJoinFlows.SuggestionKO=Splitta i seguenti Gateway:
SplitAndJoinFlows.SuggestionOK=Ben Fatto\!
UsageDefaultFlows.Description=Where possible, after an exclusive and an inclusive gateway, the modeler should express the default flow. One way for the modeler to ensure that the process does not get stuck at a gateway is to use a default condition for one of the outgoing sequence flow. This default sequence flow will always evaluate to true if all the other sequence flow conditions turn out to be false.
UsageDefaultFlows.Name=Uso delle default flows
UsageDefaultFlows.SuggestionKO=Usa default flows nei Exclusive Gateways
UsageDefaultFlows.SuggestionOK=Ben Fatto\!
UsageDefaultFlows.SuggestionSubprocessKO=\nUsage of default flows in SubProcess 
UsageInclusiveORGateways.Description=The modeler should minimize the use of inclusive gateways (OR-joins and OR-splits). Inclusive OR-splits activate one, several, or all sub- sequent branches based on conditions. They need to be synchronized with inclusive OR-join elements, which are difficult to understand in the general case.
UsageInclusiveORGateways.Name=Uso di Inclusive OR-Gateways
UsageInclusiveORGateways.SuggestionKO=\nNon usare Inclusive Gateway: 
UsageInclusiveORGateways.SuggestionOK=Ben Fatto\!
UsageInclusiveORGateways.SuggestionSubprocessKO=\nDon't use Inclusive Gateway in SubProcess 
UsageMeaningfulGateways.Description=Since gateways are only used for linkage or merging within processes, they always need to have multiple incoming or outgoing flows. Gateways with only one incoming and one outgoing sequence flow do not provide any added value.
UsageMeaningfulGateways.Name=Uso dei Gateways
UsageMeaningfulGateways.SuggestionKO=Rimuovi i Gateways con solo un input/output sequence flow:
UsageMeaningfulGateways.SuggestionOK=Ben Fatto\!