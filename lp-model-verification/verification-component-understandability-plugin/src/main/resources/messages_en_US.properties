ActivityDescription.Description=The modeler should provide a brief description for each activity in the model (if the tool allows it).
ActivityDescription.Name=Activity Description
ActivityDescription.SuggestionKO=\nPlease add Activity Description in element:
ActivityDescription.SuggestionOK=Well done\!
ActivityDescription.SuggestionSubprocessKO=\nPlease add Activity Description in SubProcess 
ApplyHierarchicalStructure.Description=The modeler should create a hierarchical Business Process Model with multi layers of details for the Process. BPMN sub-processes are used to split the Process into phases or layers. The modeler can expand the sub-processes later to expose details of lower levels of hierarchy. A process model will contain multiple pages, but internally the integrity of a single model is maintained.
ApplyHierarchicalStructure.Name=Apply hierarchical structure with SubProcesses
ApplyHierarchicalStructure.SuggestionKO=Apply hierarchical structure with SubProcesses: 
ApplyHierarchicalStructure.SuggestionOK=Well done\!
BalanceGateways.Description=The modeler should always use the same type of gateway used both for splitting and joining the flow. For example, when a flow is divided with a parallel gateway, the resulting parallel flows should be consolidated via another parallel gateway. In particular, the modeler should ensure that join parallel gateways have the correct number of incoming sequence flow-especially when used in conjunction with other gateways; this is related to ensuring the soundness property. Donâ\u20AC\u2122t apply this guidelines on Event-based or Complex Gateways.
BalanceGateways.Name=Balance gateways
BalanceGateways.SuggestionKO=Balance gateways 
BalanceGateways.SuggestionOK=Well done\!
BalanceGateways.SuggestionSubprocessKO=\nBalance gateways in SubProcess 
ConsistentUsageEndEvents.Description=The modeler should distinguish success and failure end states in a process or a sub-process with separate end events. Flows that end in the same end state should be merged to the same end event. Therefore, separate end events that do not represent distinct end states must be merged in a single end event.
ConsistentUsageEndEvents.Name=Consistent Usage of End Events
ConsistentUsageEndEvents.SuggestionKO=\nUse only one End Event:
ConsistentUsageEndEvents.SuggestionOK=Well done\!
ConsistentUsageEndEvents.SuggestionSubprocessKO=\nUse only one End Event in SubProcess 
ConsistentUsageLanes.Description=The modeler should model internal organizational units as lanes within a single process pool, not as separate pools; separate pools imply independent processes. Create a lane, in a pool, only if at least one activity or intermediate event is performed in it.
ConsistentUsageLanes.Name=Consistent usage of lanes
ConsistentUsageLanes.SuggestionKO=\nInsert Activities in Lanes:
ConsistentUsageLanes.SuggestionOK=Well done\!
ConsistentUsagePools.Description=The modeler should define as many pools as processes and/or participants. Use a black-box pool to represent external participant/processes. The modeled pools need to be in relation with each other and have to be linked to the main process through message exchange.
ConsistentUsagePools.Name=Consistent usage of Pools
ConsistentUsagePools.SuggestionKO=\nOpen only one pools: 
ConsistentUsagePools.SuggestionOK=Well done\!
ConsistentUsageStartEvents.Description=The modeler should include, in the model, only one start event. Where necessary, alternative instantiations of the process should be depicted with separate start events and using a event-based start gateway.
ConsistentUsageStartEvents.Name=Consistent Usage of Start Events
ConsistentUsageStartEvents.SuggestionKO=\nUse only one Start End Event:
ConsistentUsageStartEvents.SuggestionOK=Well done\!
ConsistentUsageStartEvents.SuggestionSubProcessKO=\nUse only one Start Event in SubProcess 
explicitGateways.Description=The modeler should not split or join flows using activities or events; the modeler should split or join sequence flows always using gateways. Moreover the modeler should not start conditional sequence flows from an activity; he should always make explicit use of gateways and start conditional sequence flows from them. This includes that an activity can have only one incoming sequence flow and only one outgoing sequence flow.
explicitGateways.Name=Explicit usage of gateways
explicitGateways.SuggestionKO=Add Gateway before or/and after of the elements: 
explicitGateways.SuggestionOK=Well done\!
ExplicitStartEndEvents.Description=The modeler should explicitly make use of start and end events. The use of start and end events is necessary to represent the different states that begin and complete the modeled process. Processes with implicit start and end events are undesirable and could lead to misinterpretations.
ExplicitStartEndEvents.Name=Explicit usage of start and end events
ExplicitStartEndEvents.SuggestionKO=Add Start or/and End Event 
ExplicitStartEndEvents.SuggestionOK=Well done\!
ExplicitStartEndEvents.SuggestionSubprocessKO=\nAdd Start or/and End Event in SubProcess 
GuidelinesFactory.KO=KO
GuidelinesFactory.KODescription=Please follow these guidelines:
GuidelinesFactory.OK=OK
GuidelinesFactory.OKDescription=Well done, no errors found\!
Generic.LabelEmpty=Unlabeled
LabelingActivities.Description=Label activities with one verb, and one object. The verb used should use the present tense and be familiar to the organization. The object has to be qualified and also of meaning to the business. Multiple activ- ities should not be labeled with the same name, except for same Call Activities used many time in the process.
LabelingActivities.Name=Labeling Activities
LabelingActivities.SuggestionKO=\nLabeling Activities:
LabelingActivities.SuggestionOK=Well done\!
LabelingActivities.SuggestionSubprocessKO=\nLabeling Activities in SubProcess 
LabelingANDGateways.Description=Omit labels on AND-splits and joins (and sequence flows connecting them); they add no new information, so it is best to omit them.
LabelingANDGateways.Name=Labeling AND Gateway
LabelingANDGateways.SuggestionKO=\nNot Labeling AND Gateways: 
LabelingANDGateways.SuggestionOK=Well done\!
LabelingANDGateways.SuggestionSubprocessKO=\nNot Labeling AND Gateways in SubProcess: 
LabelingConvergingGateways.Description=Converging gateways do not required to be labeled. When the convergence logic is not obvious, a text annotation should be associated to the gateway.
LabelingConvergingGateways.Name=Labeling Converging Gateways
LabelingConvergingGateways.SuggestionKO=\nNot Labeling Converging Gateways: 
LabelingConvergingGateways.SuggestionOK=Well done\!
LabelingConvergingGateways.SuggestionSubprocessKO=\nNot Labeling Converging Gateways in SubProcess: 
LabelingDataObject.Description=All data objects should be labeled using a qualified noun that is the name of a business object. Multiple instances of the same data object are labeled (which are really data object references) using a matching label followed by the applicable state in square brackets.
LabelingDataObject.Name=Labeling Data Object
LabelingDataObject.SuggestionKO=\nLabeling Data Objects: 
LabelingDataObject.SuggestionOK=Well done\!
LabelingDataObject.SuggestionSubprocessKO=\nLabeling Data Objects in SubProcess: 
LabelingEvents.Description=All events should have a label representing the state of the process: Events of type message, signal, escalation, and error events should be labeled with a past participle using an active verb; Link events should be labeled with a noun; Timer events should be labeled with time-date or schedule; Conditional events should be labeled with the condition that triggers them.
LabelingEvents.Name=Labeling Events
LabelingEvents.SuggestionKO=\nUse Labeling in Events:
LabelingEvents.SuggestionOK=Well done\!
LabelingEvents.SuggestionSubProcessKO=\nUse Labeling in Events of the SubProcess 
LabelingLanes.Description=Lanes must always have a label. The label should identify the responsi- ble entity for the process. Lanes are often used for representing things as internal roles (e.g., manager, associate), systems (e.g., an enterprise application), or internal departments (e.g., shipping, finance).
LabelingLanes.Name=Labeling Lanes
LabelingLanes.SuggestionKO=\nLabeling Lanes:
LabelingLanes.SuggestionOK=Well done\!
LabelingMessageEvent.Decription=Whenever the modeler uses a message event he should draw the message flow, and label the event. When a focus on the message itself is required, the modeler can represent a message icon and label it with the name of the message.
LabelingMessageEvent.Name=Labeling Message Event
LabelingMessageEvent.SuggestionKO=\nLabeling Message Events:
LabelingMessageEvent.SuggestionOK=Well done\!
LabelingMessageEvent.SuggestionSubprocessKO=\nLabeling Message Events in SubProcess: 
LabelingPools.Description=The modeler should label pools using the participantâ\u20AC\u2122s name. The main pool can be labeled using the process name. If a pool is present in a subprocess, the name of the pool must be the same of the upper-level process pool which includes the subprocess activity. This means that the pool of the upper-level process and the pool of the subprocess needs to be the same.
LabelingPools.Name=Labeling Pools
LabelingPools.SuggestionKO=\nLabeling Pools:
LabelingPools.SuggestionOK=Well done\!
LabelingStartandEndEvents.Description=The modeler should not label start none and end none event if there is only one instance of them. The modeler shoud use labeling when multiple start and end events are used. Label them according to what they represent using a noun. Do not repeat names.
LabelingStartandEndEvents.Name=Labeling Start and End Events
LabelingStartandEndEvents.SuggestionKO=\nLabeling Start/End Events: 
LabelingStartandEndEvents.SuggestionOK=Well done\!
LabelingStartandEndEvents.SuggestionSubprocessKO=\nLabeling Start/End Events in SubProcess: 
LabelingXORGateway.Description=Label XOR split gateways with an interrogative phrase (do not label XOR join-gateways). Sequence flows coming out of diverging gateways of type exclusive, inclusive and complex should be labeled using their associated conditions stated as outcomes.
LabelingXORGateway.Name=Labeling XOR Gateway
LabelingXORGateway.SuggestionKO=\nLabeling XOR Gateways: 
LabelingXORGateway.SuggestionOK=Well done\!
LabelingXORGateway.SuggestionSubprocessKO=\nLabeling XOR Gateways in SubProcess: 
LinearMessageFlows.Description=Linear message flows without useless foldings help to maintain the model clear.
LinearMessageFlows.Name=Linear Message Flows
LinearMessageFlows.SuggestionKO=Use Linear Message Flows: 
LinearMessageFlows.SuggestionOK=Well done\!
LinearSequenceFlows.Description=Linear sequence flows without useless foldings help to maintain the model clear.
LinearSequenceFlows.Name=Linear sequence flows
LinearSequenceFlows.SeggetionOK=Well done\!
LinearSequenceFlows.SuggestionKO=Use Linear sequence flows: 
LoopMarkerAnnotation.Description=The loop marker provides a more compact representation than the gateway-loopback, but it hides the loop condition. For that reason, it is best to indicate the condition in a text annotation.
LoopMarkerAnnotation.Name=Labeling Marker Annotation
LoopMarkerAnnotation.SuggestionKO=\nLabeling Marker Annotations:
LoopMarkerAnnotation.SuggestionOK=Well done\!
LoopMarkerAnnotation.SuggestionSubprocessKO=\nLabeling Marker Annotations in SubProcess 
MinimizeGatewayHeterogeneity.Description=The modeler should minimize the heterogeneity of gateway types. The use of several type of gateway may cause confusion against the simplicity of using few main type of gateways.
MinimizeGatewayHeterogeneity.Name=Minimize Gateway Heterogeneity
MinimizeGatewayHeterogeneity.SuggestionKO=Minimize Gateway Heterogeneity 
MinimizeGatewayHeterogeneity.SuggestionOK=Well done\!
MinimizeGatewayHeterogeneity.SuggestionSubprocessKO=\nMinimize Gateway Heterogeneity in SubProcess 
MinimizeModelSize.Description=The modeler should try to keep models as small as possible. Large process models are difficult to read and comprehend. Additionally, they tend to contain more errors. Defining the correct scope of tasks and level of detail of processes is key to reduce the overage of information.
MinimizeModelSize.Name=Minimize Model Size
MinimizeModelSize.SuggestionKO=Too much elements %s. Please use max 31  the number of nodes: number of activities and routing elements in a process model
MinimizeModelSize.SuggestionOK=Well done\!
ModelLoops.Description=Where possible, and if this practice contributes to simplify the model, the modeler should model a loop via activity looping (with the loop marker) instead of using a sequence flow looping.
ModelLoops.Name=Model loops via activity looping
ModelLoops.SuggestionKO=Model loops via activity looping: 
ModelLoops.SuggestionOK=Well done\!
ProcessOrientation.Description=The modeler should draw pools horizontally and use consistent layout with horizontal sequence flows, and vertical message flows and associa- tions.
ProcessOrientation.Name=Process Orientation
ProcessOrientation.SuggestionKO=Change Process Orientation: 
ProcessOrientation.SuggestionOK=Well done\!
RestrictUsageTerminateEndEvent.Description=The process modeler should use terminate events only when strictly necessary; they are used to model situations where several alternative paths are enabled and the entire process have to be finished when one of them is completed. The modeler should use other end events rather than the terminate end event (e.g. a generic end event), to guarantee that the executions of the reaming process paths or activities will not be stopped.
RestrictUsageTerminateEndEvent.Name=Restrict usage of terminate end event
RestrictUsageTerminateEndEvent.SuggestionKO=\nDon't use Terminate End Event:
RestrictUsageTerminateEndEvent.SuggestionOK=Well done\!
RestrictUsageTerminateEndEvent.SuggestionSubprocessKO=\nDon't use Terminate Event in SubProcess 
SplitAndJoinFlows.Description=The modeler should not use gateways to join and split at the same time.
SplitAndJoinFlows.Name=Split and Join Flows
SplitAndJoinFlows.SuggestionKO=Split following Gateway:
SplitAndJoinFlows.SuggestionOK=Well done\!
UsageDefaultFlows.Description=Where possible, after an exclusive and an inclusive gateway, the modeler should express the default flow. One way for the modeler to ensure that the process does not get stuck at a gateway is to use a default condition for one of the outgoing sequence flow. This default sequence flow will always evaluate to true if all the other sequence flow conditions turn out to be false.
UsageDefaultFlows.Name=Usage of default flows
UsageDefaultFlows.SuggestionKO=Usage of default flows in Exclusive Gateways
UsageDefaultFlows.SuggestionOK=Well done\!
UsageDefaultFlows.SuggestionSubprocessKO=\nUsage of default flows in SubProcess 
UsageInclusiveORGateways.Description=The modeler should minimize the use of inclusive gateways (OR-joins and OR-splits). Inclusive OR-splits activate one, several, or all sub- sequent branches based on conditions. They need to be synchronized with inclusive OR-join elements, which are difficult to understand in the general case.
UsageInclusiveORGateways.Name=Usage of Inclusive OR-Gateways
UsageInclusiveORGateways.SuggestionKO=\nDon't use Inclusive Gateway: 
UsageInclusiveORGateways.SuggestionOK=Well done\!
UsageInclusiveORGateways.SuggestionSubprocessKO=\nDon't use Inclusive Gateway in SubProcess 
UsageMeaningfulGateways.Description=Since gateways are only used for linkage or merging within processes, they always need to have multiple incoming or outgoing flows. Gateways with only one incoming and one outgoing sequence flow do not provide any added value.
UsageMeaningfulGateways.Name=Usage of Meaningful Gateways
UsageMeaningfulGateways.SuggestionKO=Remove Gateways with only one incoming/outgoing sequence flow:
UsageMeaningfulGateways.SuggestionOK=Well done\!
