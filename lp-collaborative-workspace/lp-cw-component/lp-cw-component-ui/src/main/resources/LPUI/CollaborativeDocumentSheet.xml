<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="LPUI.CollaborativeDocumentSheet" locale="">
  <web>LPUI</web>
  <name>CollaborativeDocumentSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1456826203000</creationDate>
  <parent>LPUI.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1458000715000</date>
  <contentUpdateDate>1458000715000</contentUpdateDate>
  <version>1.1</version>
  <title>#if($doc.name == 'CollaborativeDocumentSheet')Collaborative Document Sheet#{else}$services.localization.render('CollaborativeDocumentSheet.title',[$xwiki.getDocument($doc.documentReference.lastSpaceReference).title])#{end}</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}
#set ($discard = $xwiki.jsx.use("LPUI.CollaborativeDocumentSheet"))
#set ($discard = $xwiki.ssx.use("LPUI.CollaborativeDocumentSheet"))
#set ($cdobj = $doc.getObject("LPCode.CollaborativeDocumentClass"))
#set ($modelsetid = "${cdobj.getProperty('modelsetid').value}")
#set ($modelid = "${cdobj.getProperty('modelid').value}")
#set ($artifactid = "${cdobj.getProperty('artifactid').value}")
{{html}}
&lt;input type="hidden" id="LPCode.CollaborativeDocumentClass_0_modelsetid" name="LPCode.CollaborativeDocumentClass_0_modelsetid" value="${modelsetid}" /&gt;
&lt;input type="hidden" id="LPCode.CollaborativeDocumentClass_0_modelid" name="LPCode.CollaborativeDocumentClass_0_modelid" value="${modelid}" /&gt;
&lt;input type="hidden" id="LPCode.CollaborativeDocumentClass_0_artifactid" name="LPCode.CollaborativeDocumentClass_0_artifactid" value="${artifactid}" /&gt;
{{/html}}
#if ("$!xcontext.action" == "view")
{{html}}
&lt;button id="ca-validate" class="btn btn-primary"&gt;${services.localization.render('CollaborativeDocumentSheet.validate')}&lt;/button&gt;
{{/html}}
#end
$doc.display('content')
{{/velocity}}</content>
  <object>
    <name>LPUI.CollaborativeDocumentSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>d96c03c7-a91b-41d4-8574-7f34b6d4eac6</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>require.config({
    paths: {
      "Q": "/xwiki/bin/jsx/LPCode/Q"
    }
});
require(["jquery", "xwiki-meta", "Q"], function ($, xm, Q) {
$(function(){
  var mapReference = function mapReference(reference) {
    var map = {"page": reference.name, "spaces": [], "wiki": ""};
    var r = reference.parent;
    while(r.parent != null) {
      map.spaces.push(r.name);
      r = r.parent;
    }
    map.wiki = r.name;
    return map;
  };
  var getTitle = function getTitle(reference) {
    return Q.Promise(function(resolve, reject, notify) {
      var map = mapReference(reference);
      var url = "/xwiki/rest/wikis/" + map.wiki;
      for (space of map.spaces) {
        url += "/spaces/" + space;
      }
      url += "/pages/" + map.page;
      url += "?media=json";
      $.ajax({
        "url": url,
        "method": "GET",
        "accept": "application/json"
      }).done(function(data, status, xhr) {
        resolve(data.title);
      }).fail(function(xhr, status, err) {
        reject(err);
      });
    });
  };
  var getContent = function getContent(reference, syntax) {
    return Q.Promise(function(resolve, reject, notify) {
      var map = mapReference(reference);
      var url = "/xwiki/bin/get/LPCode/Render?outputSyntax=plain";
      url += "&amp;reference=" + reference;
      url += "&amp;syntax=" + syntax;
      $.ajax({
        "url": url,
        "method": "GET",
        "accept": "text/" + syntax
      }).done(function(data, status, xhr) {
        resolve(data);
      }).fail(function(xhr, status, err) {
        reject(err);
      });
    })
  };
  var analyze = function analyze(id, language, options, title, plain, html) {
    return Q.Promise(function(resolve, reject, notify) {
      var sep = "\n-*-*-\n";
      var data = title + sep + plain + sep + html;
      var url = "/xwiki/rest/learnpad/cw/corefacade/analyze?"
      url += "id=" + xm.documentReference;
      url += "&amp;language=" + language;
      for(option of options) {
        url += "&amp;option=" + option;
      }
      $.ajax({
        "url": url,
        "method": "POST",
        "contentType": "text/plain",
        "accept": "application/json",
        "data": data,
        "dataType": "text"
      }).done(function(data, status, xhr) {
        resolve(data);
      }).fail(function(xhr, status, err) {
        reject(err);
      });
    });
  };
  var status = function status(id) {
    return Q.Promise(function(resolve, reject, notify) {
      var url = "/xwiki/rest/learnpad/cw/corefacade/analyze/" + id + "/status";
      var askStatus = function askStatus() {
        $.ajax({
          "url": url,
          "method": "GET",
          "accept": "application/json"
        }).done(function(data, status, xhr) {
          if(data == 1.0) {
            resolve();
          } else if(data &gt;= 0.0) {
            setTimeout(askStatus, 200);
            notify(data);
          } else {
            reject(new Error("The content analysis failed due to an unexpected error."));
          }
        }).fail(function(xhr, status, err) {
          reject(err);
        });
      };
      askStatus();
    });
  };
  var results = function results(id) {
    return Q.Promise(function(resolve, reject, notify) {
      status(id).progress(function(progress) {
        $("#ca-progressbar").css("width", (100.0*progress)+"%");
      }).done(function() {
        var url = "/xwiki/rest/learnpad/cw/corefacade/analyze/" + id;
        $.ajax({
          "url": url,
          "method": "GET",
          "accept": "application/xml"
        }).done(function(data, status, xhr) {
          resolve(data);
        }).fail(function(xhr, status, err) {
          reject(err);
        });
      });
    });
  };
  validatebtn = $("#ca-validate");
  validatebtn.on("click", function(e) {
    e.preventDefault();
    $("#ca-validate").after('&lt;div id="ca-progressbar"&gt;&lt;/div&gt;');
    Q.all([
      getTitle(xm.documentReference),
      getContent(xm.documentReference, "plain"),
      getContent(xm.documentReference, "html")
    ]).then(function(data) {
      var title = data[0];
      var plain = data[1];
      var html = data[2];
      var options = [];
      options.push("simplicity");
      options.push("non_ambiguity");
      options.push("content_clarity");
      options.push("presentation_clarity");
      options.push("completeness");
      options.push("correctness");
      return analyze(xm.documentReference, "english", options, title, plain, html);
    }).then(function(id) {
      return results(id);
    }).then(function(results) {
      $("#ca-progressbar").css("width", "100%");
      alert("Redirect to the interface of the analyzer.");
      $("#ca-progressbar").remove();
    });
  });
});
});</code>
    </property>
    <property>
      <name>Validate button</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>LPUI.CollaborativeDocumentSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>2e2066d6-2351-4bf9-b009-c9225145c53a</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>6</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>3</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>1</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>5</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>4</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#ca-progressbar {
  display: block;
  width: 0%;
  height: 0px;
  border-style: solid;
  border-color: #337ab7;
  border-width: 1px;
}
      .css("display", "block")
      .css("width", "0%")
      .css("height", "0px")
      .css("border-style", "solid")
      .css("border-color", "#337ab7")
      .css("border-width", "1px");</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
